object UserPlayer : Player {

    // This text images can be useful
    private val BILLY =
    """
    ⠄⠄⠄⠄⠄⢀⣀⣀⣤⡶⢖⡻⢟⣻⠿⠢⠄⣀
    ⠄⠄⣀⢔⡾⣫⢿⢋⠈⠄⡜⡩⠄⠄⠤⠤⠤⠤⠽⣆
    ⢀⣰⢉⢸⡀⢇⡜⢎⣤⣷⣧⣧⣮⣤⡄⠒⠒⠚⠿⠿⣧
    ⢸⣰⢕⣵⣷⣼⠄⣾⣿⠟⠛⠉⠛⠛⠛⠿⢶⣄⣀⡀⠘⡄
    ⢏⠡⢸⣿⢿⣿⠟⠑⠁⠄⡤⡇⠄⠄⠄⠄⠄⠘⢷⠻⣷⡇
    ⢸⢡⡿⠁⡩⠋⠄⠄⠄⠄⡿⠄⠄⠄⠄⠄⠄⠄⠘⣇⢨⢳
    ⠸⡾⡅⠄⠄⠄⠄⠄⠄⡀⠃⣠⣴⡶⠶⠶⠦⠄⠄⢻⣴⣷
    ⠄⢱⣷⡀⠄⢀⣤⣶⡾⡀⠄⣉⣰⣶⠖⠛⠗⠒⠄⠈⢿⣿⣿⡆
    ⠄⠄⢻⣇⠠⢟⣭⠦⢴⠚⡄⠨⡇⠬⠟⠖⠄⠄⠄⠄⠄⢿⢾⣸
    ⠄⠄⠈⠿⡄⠈⠁⠐⠈⠰⠄⠄⠿⠄⢆⠄⠄⠄⠄⠄⠄⢤⢓⡏
    ⠄⠄⠈⡿⣧⡀⠄⠄⠄⠳⢣⣀⡼⠂⠄⠄⢈⣱⠄⠄⠄⢸⠉
    ⠄⠄⠄⢂⠻⣇⠄⠄⠄⠁⠄⢀⡳⢔⡳⢞⡏⢸⠄⠄⠄⢸
    ⠄⠄⠄⠄⠑⠚⡆⠰⠄⠐⠾⠍⠠⢑⣀⠕⠄⠘⠄⠄⢀⣾
    ⠄⠄⠄⠄⠄⠄⢸⡀⠈⠄⠄⠈⠉⠉⠔⠁⠄⠘⢀⣼⡿⡿⡄
    ⠄⠄⠄⠄⠄⠄⠄⢻⠪⢌⡀⠄⠄⠄⠄⠄⠄⢰⠞⠋⠙⠄⢣⡀
    ⠄⠄⠄⠄⠄⠄⠄⠘⡄⠄⠙⠢⢅⡠⡤⢤⠒⠁⠄⠄⠄⠁⠈⠻
    ⠄⠄⠄⠄⠄⠄⠄⣠⣧⠄⠄⠄⢀⠄⠄⣡⠄⠄⠄⠄⠄⠄⠄⠄
    ⠄⠄⠄⠄⣠⡴⠎⠻⣟⡀⠄⠄⠸⢄⣬⣿⠄⠄⠄⠄⠠⠒⡢⠢
    ⠄⢀⡠⠊⠈⠄⠄⠄⠈⢻⣀⠄⢂⠈⠫⢟⠄⠄⠄⠄⠄⠉⠊⠄
    ⠉⠉⡠⠖⠚⠛⠒⠤⠄⣈⠎⠄⠄⠣⣀⡈⠄⣀⣀⣀⣠⣀⣀⣀
    ⠄⠄⠄⠄⠠⠐⠚⠑⠄⠄⠄⡀⠄⠄⣠⣶⡿⠉⠄⠄⠄⠄⠄⠄
    """.trimIndent() +
        "\n            Billy          "

    val MR_INCREDIBLE = """
    ⠀⠀⠀⠀⠀⡰⢂⣾⠿⠛⠒⠚⠛⠃⠺⢶⡀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⢠⡣⠋⠁⠀⠀⠀⠀⠀⢀⡐⠒⢙⣄⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⡘⠀⠀⠀⠀⠀⠀⢄⠉⠀⠐⠀⠀⠙⢦⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⣾⠁⠀⠀⠄⠂⢈⣠⠎⠀⠀⣸⣿⡿⠓⢬⡇⠀⠀⠀⠀⠀
    ⠀⠀⢸⡟⠀⠔⣁⣤⣶⣿⠋⢰⠀⠀⣿⡟⠻⣦⠀⢳⠀⠀⠀⠀⠀
    ⠀⠀⣷⡇⢠⣾⢟⢭⣭⡭⡄⠀⡆⠀⣿⣷⣶⠺⡆⢸⡄⠀⠀⠀⠀
    ⠀⠀⠇⡇⠛⠡⣑⣈⣛⠝⢁⡀⠇⠀⣿⡿⠛⠒⣡⠇⣧⣀⠀⠀⠀
    ⠀⠀⢠⠁⠈⠐⠤⠄⠀⣠⢸⠈⠢⠀⣿⡇⠀⠀⠠⠚⣿⣿⠀⠀⠀
    ⡄⠀⢾⠀⡆⠠⣴⠞⠯⡀⠈⠙⠲⣶⣿⡇⠑⣦⡄⠀⣿⣿⠀⠀⠀
    ⠈⠺⡮⠀⢡⠀⠀⠀⠀⠀⠁⠐⠒⠒⠛⠃⠈⠛⠇⠀⡏⡏⠀⠀⠀
    ⠀⢰⠁⠀⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠀⢷⠀⠀⠀
    ⠀⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠃⠀⢸⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠀⠀
    ⠀⠀⢣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠸⡳⡀⠀
    ⠀⠀⠀⠑⢄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣯⣼⡇⠑⣄
    """.trimIndent() +
    "\n       Mr. Incredible"

    override fun attack(my: UnitStatus, other: UnitStatus): Pair<Int, Int> {
        val (a, b) = readLine()!!.split(" ").map { it.toInt() }
        return a to b
    }

    // handling events example
    override fun event(event: Event) {
        when (event) {
            is DamageDealt -> println("You've dealt ${event.amount} damage")
            is DamageReceived -> println("You've received ${event.amount} damage")
            Death -> println("You died")
            Victory -> println("You won")
        }
    }

}